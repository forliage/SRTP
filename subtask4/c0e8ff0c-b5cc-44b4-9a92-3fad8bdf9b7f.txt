
import os
from collections import namedtuple

EvalResult = namedtuple('EvalResult', ['success', 'message', 'progress'])

def evaluate_agent_task_completion(input_pdf_path: str, output_dir_path: str) -> EvalResult:
    # Extract the base name of the PDF file without extension
    pdf_base_name = os.path.splitext(os.path.basename(input_pdf_path))[0]

    # Check if the PDF file was selected
    if not check_mouse_clicks(text=pdf_base_name + '.pdf'):
        return EvalResult(False, f"Subtask execution failed because the PDF file '{pdf_base_name}.pdf' was not selected.", 0/3)

    # Check if the conversion process was completed
    if not check_text_exists_via_control(text='PDF24 has processed your job.'):
        return EvalResult(False, "Subtask execution failed because the conversion process did not complete successfully.", 1/3)

    # Check if the images are saved in the output directory
    for i in range(1, 15):  # Assuming there are 14 images based on the controls
        image_file_name = f"{pdf_base_name}-{i:02}.jpg"
        image_file_path = os.path.join(output_dir_path, image_file_name)
        if not check_file_exists(file_path=image_file_path):
            return EvalResult(False, f"Subtask execution failed because the image '{image_file_name}' was not found in the output directory.", 2/3)

    # All checks passed, subtask is considered complete
    return EvalResult(True, "Subtask completed successfully", 3/3)